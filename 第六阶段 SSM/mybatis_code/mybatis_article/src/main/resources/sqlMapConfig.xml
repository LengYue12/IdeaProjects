<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
<!--    加载properties文件  resource里填写的就是properties文件的全路径-->

<!--    在加载sqlMapConfig.xml这个核心配置文件的同时，把jdbc.properties这个文件也进行加载了-->
    <properties resource="jdbc.properties"></properties>


    <settings>
<!--        开启全局延迟加载功能-->
        <setting name="lazyLoadingEnabled" value="true"/>
<!--        所有方法都会延迟加载-->
        <setting name="lazyLoadTriggerMethods" value="toString()"/>
    </settings>



<!--    设置别名-->
    <typeAliases>
<!--        type值为实体类的全路径，alias值是为当前实体所起的别名-->
<!--        方式一：给单个实体起别名-->
<!--        <typeAlias type="com.lagou.domain.User" alias="user"></typeAlias>-->

<!--        方式二：批量起别名，别名就是类名，且不区分大小写。常用-->
<!--        name值配置的就是实体类所在的包路径
这样就会去扫描domain这个包下所有的实体类，并给所有的实体起别名-->
        <package name="com.lagou.domain"/>
    </typeAliases>



<!--    environments：运行环境-->
<!--        默认走id为development的environment开发环境-->
    <environments default="development">
        <environment id="development">
<!--           transactionManager事务管理器，当前的事务交由JDBC管理 -->
            <transactionManager type="JDBC"></transactionManager>
<!--            数据源信息,数据库的一些配置信息  POOLED:使用mybatis的连接池  UNPOOLED：不使用连接池-->
            <dataSource type="POOLED">
<!--                已经加载了jdbc.properties这个文件。所以数据库的配置信息的value值不用写死了，就可以动态地获取到jdbc.properties里面配置的value值-->
<!--                使用${}来引用jdbc.properties里面配置的key值所对应的value值-->
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

<!--引入映射配置文件-->
    <mappers>
<!--        <mapper resource="com/lagou/mapper/UserMapper.xml"></mapper>-->

        <!--        mapper接口的全路径-->
<!--        使用该方式：接口和映射文件需要同包同名-->
<!--        <mapper class="com.lagou.mapper.UserMapper"></mapper>-->

        <!--       批量加载映射 -->
<!--        name的值就是mapper接口所在的包路径，就会扫描mapper包下所有的mapper接口，并且加载对应的映射配置文件-->
        <package name="com.lagou.mapper"/>
    </mappers>
</configuration>