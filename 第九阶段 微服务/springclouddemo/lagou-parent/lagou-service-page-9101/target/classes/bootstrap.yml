server:
  port: 9101 # 后期该微服务多实例，端口从9100递增（10个以内）
spring:
  # 解决bean重复注册问题
  main:
    allow-bean-definition-overriding: true
  application:
    name: lagou-service-page
  datasource:
     url: jdbc:mysql://localhost:3306/lagou?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
     username: root
     password: 123456
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848 #nacos server 地址
      config:
        server-addr: 127.0.0.1:8848 #nacos server 地址
        file-extension: yaml
        # 扩展的配置文件
        ext-config[0]:
          data-id: pagea.yaml
          refresh: true # 启用自动更新
        ext-config[1]:
          data-id: pageb.yaml
          refresh: true # 启用自动更新

    sentinel:
      transport:
        dashboard: 127.0.0.1:8080 # 指定sentinel控制台的地址
        port: 8719  # 在微服务运行时会启动一个HTTPServer，该Server的作用就是与sentinel的dashboard进行交互
#  cloud:
#    config: # 这是针对config分布式配置中心的配置，config server
#      name: application
#      profile: dev      # profile的值
#      label: master # 分支名称
#      uri: http://localhost:9400 # config server的地址
#  rabbitmq:
#    host: 192.168.114.128
#    port: 5672
#    username: lengyue
#    password: 123456

#eureka:
#  client:
#    service-url: # eureka server的路径
#      defaultZone:  http://LagouCloudEurekaServerA:9200/eureka,http://LagouCloudEurekaServerB:9201/eureka
#  instance:
#    prefer-ip-address: true
#    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@



# 针对的被调用方微服务名称，不加就是全局生效
lagou-service-product:
  ribbon:
    #请求连接超时时间
    ConnectTimeout: 2000
    #请求处理超时时间
    ReadTimeout: 5000
    #对所有操作都进行重试
    OkToRetryOnAllOperations: true
    ####根据如上配置，当访问到故障请求的时候，它会再尝试访问一次当前实例（次数由MaxAutoRetries配置），
    ####如果不行，就换一个实例进行访问，如果还不行，再换一次实例访问（更换次数由 MaxAutoRetriesNextServer配置），
    ####如果依然不行，返回失败信息。
    MaxAutoRetries: 0 #对当前选中实例重试次数，不包括第一次调用
    MaxAutoRetriesNextServer: 0 #切换实例的重试次数
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #随机策略

# 配置熔断策略：
hystrix:
  command:
    default:
      circuitBreaker:
        # 强制打开熔断器，如果该属性设置为true，强制断路器进入打开状态，将会拒绝所有的请求。默认false关闭的
        forceOpen: false
        # 触发熔断错误比例阈值，默认值50%
        errorThresholdPercentage: 50
        # 熔断后休眠时长，默认值5秒
        sleepWindowInMilliseconds: 3000
        # 熔断触发最小请求次数，默认值是20
        requestVolumeThreshold: 2
      execution:
        isolation:
          thread:
          # 熔断超时设置，默认为1秒
            timeoutInMilliseconds: 2000


# springboot中暴露健康检查等断点接口
management:
  endpoints:
    web:
      exposure:
        include: "*"
  # 暴露健康接口的细节
  endpoint:
    health:
      show-details: always


# 开启Feign对熔断器的支持
feign:
  hystrix:
    enabled: true
  # 开启请求和响应的压缩设置，默认是不开启的
  compression:
    request:
      enabled: true # 开启
      mime-types: text/xml,application/xml,application/json # 默认值
      min-request-size: 2048
    response:
      enabled: true

