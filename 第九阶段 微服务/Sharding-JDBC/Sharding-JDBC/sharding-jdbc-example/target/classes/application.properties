spring.application.name = sharding-jdbc-simple
server.servlet.context-path = /sharding-jdbc
spring.http.encoding.enabled = true
spring.http.encoding.charset = UTF-8
spring.http.encoding.force = true
spring.main.allow-bean-definition-overriding = true
mybatis.configuration.map-underscore-to-camel-case = true

# ��������Դ
#spring.shardingsphere.datasource.names = db1

#spring.shardingsphere.datasource.db1.type = com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.db1.driver-class-name = com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.db1.url = jdbc:mysql://localhost:3306/lg_order?characterEncoding=UTF-8&useSSL=false
#spring.shardingsphere.datasource.db1.username = root
#spring.shardingsphere.datasource.db1.password = 123456

# ����������Դ
spring.shardingsphere.datasource.names = db1,db2,db3,m1,s1

spring.shardingsphere.datasource.db1.type =com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db1.driver-class-name =com.mysql.jdbc.Driver
spring.shardingsphere.datasource.db1.url =jdbc:mysql://localhost:3306/lg_order_1?characterEncoding=UTF-8&useSSL=false
spring.shardingsphere.datasource.db1.username = root
spring.shardingsphere.datasource.db1.password = 123456

spring.shardingsphere.datasource.db2.type =com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db2.driver-class-name =com.mysql.jdbc.Driver
spring.shardingsphere.datasource.db2.url =jdbc:mysql://localhost:3306/lg_order_2?characterEncoding=UTF-8&useSSL=false
spring.shardingsphere.datasource.db2.username = root
spring.shardingsphere.datasource.db2.password = 123456

# ��ֱ�ֿ������Դ
spring.shardingsphere.datasource.db3.type =com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db3.driver-class-name =com.mysql.jdbc.Driver
spring.shardingsphere.datasource.db3.url =jdbc:mysql://localhost:3306/lg_user?characterEncoding=UTF-8&useSSL=false
spring.shardingsphere.datasource.db3.username = root
spring.shardingsphere.datasource.db3.password = 123456


#��д��������Դ
spring.shardingsphere.datasource.m1.type =com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name =com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url =jdbc:mysql://192.168.200.141:3306/test?characterEncoding=UTF-8&useSSL=false
spring.shardingsphere.datasource.m1.username = root
spring.shardingsphere.datasource.m1.password = LengYue@520

spring.shardingsphere.datasource.s1.type =com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.s1.driver-class-name =com.mysql.jdbc.Driver
spring.shardingsphere.datasource.s1.url =jdbc:mysql://192.168.200.142:3306/test?characterEncoding=UTF-8&useSSL=false
spring.shardingsphere.datasource.s1.username = root
spring.shardingsphere.datasource.s1.password = LengYue@520

#������ӿ����Ϣ
#����ms1�߼���
spring.shardingsphere.sharding.master-slave-rules.ms1.master-data-source-name=m1
spring.shardingsphere.sharding.master-slave-rules.ms1.slave-data-source-names=s1

#�������ݽڵ�
#ms1���߼��⣩.����    ��������ms1�ʹ�����m1�����⣩��s1���ӿ⣩   ����ʹӿⶼ��products��
spring.shardingsphere.sharding.tables.products.actual-data-nodes = ms1.products






# �ֿ���ԣ���user_idΪ��Ƭ������Ƭ����Ϊuser_id % 2 + 1��user_idΪż������db1����Դ���������db2��
spring.shardingsphere.sharding.tables.pay_order.database-strategy.inline.sharding-column = user_id
spring.shardingsphere.sharding.tables.pay_order.database-strategy.inline.algorithm-expression = db$->{user_id % 2 + 1}

#�������ݽڵ�,ָ���ڵ����Ϣ     db1.pay_order_1
spring.shardingsphere.sharding.tables.pay_order.actual-data-nodes = db$->{1..2}.pay_order_$->{1..2}

spring.shardingsphere.sharding.tables.users.actual-data-nodes = db$->{3}.users

#ָ��pay_order�� (�߼���)���������ɲ���Ϊ SNOWFLAKE
spring.shardingsphere.sharding.tables.pay_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.pay_order.key-generator.type=SNOWFLAKE

#ָ��pay_order��ķ�Ƭ���ԣ���Ƭ���԰�����Ƭ���ͷ�Ƭ�㷨
spring.shardingsphere.sharding.tables.pay_order.table-strategy.inline.sharding-column = order_id
spring.shardingsphere.sharding.tables.pay_order.table-strategy.inline.algorithm-expression = pay_order_$->{order_id % 2 + 1}

spring.shardingsphere.sharding.tables.users.table-strategy.inline.sharding-column = id
spring.shardingsphere.sharding.tables.users.table-strategy.inline.algorithm-expression = users


# ָ��districtΪ������
spring.shardingsphere.sharding.broadcast-tables=district
# �������ɲ���
spring.shardingsphere.sharding.tables.district.key-generator.column=id
spring.shardingsphere.sharding.tables.district.key-generator.type=SNOWFLAKE

# ��sql�����־
spring.shardingsphere.props.sql.show = true